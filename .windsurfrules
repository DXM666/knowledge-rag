本项目是一个基于RAG的知识库项目
我们的技术架构采用分层设计，围绕RAG核心流程构建全链路能力，具体分为四层架构：

**1. 前端交互层**
- 技术栈：React + TypeScript + WebSocket
- 核心设计：
  - 开发智能对话工作台，支持富文本消息（商品卡片/操作指南）
  - 实现代码沙箱组件，提供商品上架代码片段的实时预览
  - 通过Service Worker实现离线消息缓存和断点续传
- 创新点：将Three.js应用于店铺装修预览，支持3D场景下的AI指导

**2. 服务网关层**
- 技术选型：Nginx + Spring Cloud Gateway
- 关键能力：
  - 实现WebSocket与HTTP协议的智能路由
  - 开发对话流量镜像功能，支持A/B测试
  - 集成OAuth2实现商家权限透传

**3. AI服务层**
- 检索模块：
  - 混合引擎：Elasticsearch（BM25） + Faiss（向量检索）
  - 知识蒸馏：通过BERT模型将百万级商品文档压缩为5万核心片段
  - 动态缓存：基于LFU算法维护Top 1000高频查询结果
- 生成模块：
  - 微调Qwen模型，注入电商领域知识
  - 开发响应校验器，确保输出符合平台规范
  - 实现多轮对话状态机管理

**4. 数据存储层**
- 结构化数据：MySQL集群（商品/订单信息）
- 非结构化数据：MongoDB（对话日志/用户行为）
- 向量数据库：Milvus（2亿+商品向量存储）
- 实时计算：Flink处理商品状态变更事件

**关键技术创新**
1. 开发了跨模态检索方案，支持"图片+文字"混合查询
2. 设计了自适应上下文窗口机制，动态调整输入token长度
3. 实现了边缘计算节点，将80%的常规查询在CDN层终结

**性能指标**
- 首屏加载：1.2s（WebAssembly加速向量计算）
- 对话延迟：200ms内响应（95分位）
- 系统可用性：99.99%（多可用区部署+自动故障转移）



包管理
使用uv来管理包，虚拟环境为knw-rag